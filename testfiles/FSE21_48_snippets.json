[
  [
    "n zero.” As with DDSet, these experi-\nments consist of mutations on the input, driven by earlier\ntest outcomes.\nWhile all these approaches make use of additional information\nfor reducing inputs (such as grammars or domain-specific\ncode), the core algorithm of Delta Debugging has seen few\nimprovement suggestions since 2002; its key contribution,\nnamely starting with large reduction steps and subsequently in-\ncreasing granularity, has stood the test of time. One important\nenhancement, however, is Probabilistic Delta Debugging [20],\n[21]. While the original Delta Debugging algorithm would\ntreat all parts of an input equally, ProbDD tracks which\nelements of the input are apparently necessary for the input\n(because removing them causes the input to become incorrect),\nand uses this to focus reduction on other parts of the input.\nVII. OUTLOOK AND FUTURE DIRECTIONS\nWhat will the debugging tools and techniques in the 2030s\nlook like? And what will we use to debug programs? The\nadvent of machine learning and artificial intelligence has\nalready brought enhancements to a number of core software\ndevelopment techniques, such as test",
    "tion for Computing Machinery, 2023, p. 438–449. [Online].\nAvailable: https://doi.org/10.1145/3611643.3616296\n[20] G. Wang, R. Shen, J. Chen, Y. Xiong, and L. Zhang, “Probabilistic\ndelta debugging,” in Proceedings of the 29th ACM Joint Meeting on\nEuropean Software Engineering Conference and Symposium on the\nFoundations of Software Engineering, ser. ESEC/FSE 2021.\nNew\nYork, NY, USA: Association for Computing Machinery, 2021, p.\n881–892. [Online]. Available: https://doi.org/10.1145/3468264.3468625\n[21] M. Zhang, Z. Xu, Y. Tian, X. Cheng, and C. Sun, “Toward a better\nunderstanding of probabilistic delta debugging,” 2025, to appear at\nICSE 2025. [Online]. Available: https://arxiv.org/abs/2408.04735\n[22] T. Mammadov, D. Klakow, A. Koller, and A. Zeller, “Learning program\nbehavioral models from synthesized input-output pairs,” 2024. [Online].\nAvailable: https://arxiv.org/abs/2407.08597\nThis article has been accepted for publication in IEEE Transactions on Software Engineering. This is the author's version which has not been fully edited and \ncontent may change prior to final publication. Citation informati"
  ],
  21
]